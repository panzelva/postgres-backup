name: Build image
on:
  push:
    branches:
      # Matches all branch and tag names that don't contain a slash (/).
      - "*"
    tags:
      # Matches all semantic versioning tags
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  docker:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Setting up runner for image build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # Setting up regitry credentials
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          # secrets.GITHUB_TOKEN does not have needed permission atm
          password: ${{ secrets.CR_PAT }}
      # Extracting image tag from git ref
      - name: Resolve tag
        run: |
          GITHUB_REF_STRIPPED=${GITHUB_REF#refs/}
          REF_NAME=${GITHUB_REF_STRIPPED##*/}
          REF_TYPE=${GITHUB_REF_STRIPPED%/*}
          if [[ "$REF_TYPE" == "heads" ]]; then
            if [[ "$REF_NAME" == "master" ]]; then
              echo "TAG=latest" >> $GITHUB_ENV
            else
              echo "TAG=$REF_NAME" >> $GITHUB_ENV
            fi
          elif [[ "$REF_TYPE" == "tags" ]]; then
            echo "TAG=${REF_NAME##v}" >> $GITHUB_ENV
          fi
          cat $GITHUB_ENV
      # Building image
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ env.TAG }},ghcr.io/${{ github.repository }}:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache
